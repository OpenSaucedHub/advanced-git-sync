name: "Advanced Git Sync"
description: "Synchronize GitHub repository with GitLab including branches, PRs, and issues"
author: "vikshan"
inputs:
  GITHUB_TOKEN:
    description: "GitHub token for authentication (use GH_TOKEN secret for workflow scope)"
    required: false
    default: ${{ github.token }}

  GH_TOKEN:
    description: "GitHub Personal Access Token with workflow scope (recommended)"
    required: false

  GITLAB_TOKEN:
    description: "GitLab token for authentication"
    required: false

  CONFIG_PATH:
    description: "Path to the sync configuration file"
    required: false
    default: ".github/sync-config.yml"

runs:
  using: "composite"
  steps:
    - name: Backup Original Project Dependencies
      shell: bash
      run: |
        # Backup existing package.json and bun.lock if they exist
        if [ -f package.json ]; then
          cp package.json package.json.original-backup
        fi
        if [ -f bun.lock ]; then
          cp bun.lock bun.lock.original-backup
        fi

    - name: Create Minimal Dependencies Package
      shell: bash
      run: |
        # Create a minimal package.json with only required dependencies
        echo '{
          "dependencies": {
            "@actions/core": "^1.11.1",
            "@actions/github": "^6.0.1",
            "@gitbeaker/rest": "^43.5.0",
            "@octokit/rest": "^22.0.0",
            "deepmerge": "^4.3.1",
            "js-yaml": "^4.1.0",
            "zod": "^4.1.12"
          }
        }' > package.json

    - name: Setup Bun and install dependencies
      uses: iamvikshan/.github/.github/actions/setup-bun@main

    - name: Run Advanced Git Sync
      shell: bash
      env:
        INPUT_GITHUB_TOKEN: ${{ inputs.GH_TOKEN || inputs.GITHUB_TOKEN }}
        INPUT_GITLAB_TOKEN: ${{ inputs.GITLAB_TOKEN }}
        INPUT_CONFIG_PATH: ${{ inputs.CONFIG_PATH }}
      run: bun run ${{ github.action_path }}/src/index.ts

    - name: Post-Job Cleanup
      if: always()
      shell: bash
      run: bun ${{ github.action_path }}/scripts/postjob.js

branding:
  icon: "git-branch"
  color: "orange"
